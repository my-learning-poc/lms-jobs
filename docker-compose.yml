version: '3.7'

networks:
  piramal_lms_network:
    name: piramal_lms_network
    driver: bridge
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - piramal_lms_network
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db

  postgresql:
    container_name: postgres
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - piramal_lms_network
    ports:
      - '5432:5432'
    volumes:
      - postgres-db:/data/postgres
      # copy the sql script to create tables
      - ./data/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
#      - ./data/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    networks:
      - piramal_lms_network
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: kafka-broker
    networks:
      - piramal_lms_network
    ports:
      - '19092:19092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.2.1
    networks:
      - piramal_lms_network
    ports:
      - 8085:8085
    depends_on:
      - broker
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:9092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: http://schemaregistry:8085

      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - piramal_lms_network
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    volumes:
      - ./data/kui/config.yml:/etc/kafkaui/dynamic_config.yaml

volumes:
  mongodb_data:
    driver: local
  postgres-db:
    driver: local