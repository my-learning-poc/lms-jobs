version: '3.7'

networks:
  piramal_lms_network:
    name: piramal_lms_network
    driver: bridge
services:
#  mongodb:
#    image: mongo:latest
#    container_name: mongodb
#    networks:
#      - piramal_lms_network
#    ports:
#      - '27017:27017'
#    volumes:
#      - mongodb_data:/data/db

  postgresql:
    container_name: postgres
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres-db:/data/postgres
      # copy the sql script to create tables
      - ./data/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
#      - ./data/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    networks:
      - piramal_lms_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    networks:
      - piramal_lms_network
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
#  zookeeper:
#    image: confluentinc/cp-zookeeper:5.5.0
#    container_name: zookeeper
#    ports:
#      - '2181:2181'
#    networks:
#      - piramal_lms_network
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#
#  broker:
#    image: confluentinc/cp-kafka:5.5.0
#    container_name: kafka-broker
#    networks:
#      - piramal_lms_network
#    ports:
#      - '19092:19092'
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#  elasticsearch:
#    container_name: elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
#    networks:
#      - piramal_lms_network
#    environment:
#      - xpack.security.enabled=false
#      - discovery.type=single-node
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - elasticsearch_data:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200
#      - 9300:9300
#  kibana:
#    container_name: kibana
#    image: docker.elastic.co/kibana/kibana:7.11.0
#    links:
#      - elasticsearch
#    networks:
#      - piramal_lms_network
#    ports:
#      - "5601:5601"
#  redis:
#    image: docker.io/bitnami/redis:6.2
#    container_name: redis
#    networks:
#      - jio_fabric_network
#    environment:
#      # ALLOW_EMPTY_PASSWORD is recommended only for development.
#      - ALLOW_EMPTY_PASSWORD=yes
#      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
#    ports:
#      - '6379:6379'
#    volumes:
#      - 'redis_data:/bitnami/redis/data'

volumes:
  mongodb_data:
    driver: local
  postgres-db:
    driver: local
  elasticsearch_data:
    driver: local
  redis_data:
    driver: local